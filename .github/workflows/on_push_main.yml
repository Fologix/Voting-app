name: CI pipeline

on:
    push:
        branches: 
            - main

jobs:
  ReleaseBuildPush:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/voting-app

  build-and-push:
    #needs: lint-and-security #j'avais commencé une autre fonction mais je me suis perdu 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer
      - name: Initialize Packer
        run: packer init packer.pkr.hcl
  
      - name: Build Docker image with Packer
        run: packer build packer.pkr.hcl

      - name: Build Docker image with Packer
        run: packer build packer.pkr.hcl

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: docker fologix/voting-app:tagname
          
  deploy-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Lancer le docker-compose en background
      run: docker-compose up -d

    - name: Attendre que l'application soit lancée
      run: sleep 10 # pr que le container soit prêt 

    - name: Installer les dépendances pour les tests
      run: pip install pytest flask

    - name: Exécuter les tests unitaires
      run: pytest

    - name: Nettoyage
      run: docker-compose down
